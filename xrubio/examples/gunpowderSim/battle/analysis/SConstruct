nameProgram = 'analysis'

srcFiles = Split('main.cxx ../../../../MpiStubCode.cxx')

import os, sys
from subprocess import call

release = ARGUMENTS.get('release', 1)
extremeDebug = ARGUMENTS.get('edebug', 0)
useMpi = ARGUMENTS.get('mpi', 1)

if int(useMpi) == 1 :	
	env = Environment(ENV=os.environ, CXX='mpicxx')
else:
	env = Environment(ENV=os.environ, CXX='g++')

linkFlags = Split('-fopenmp')
libs = Split('tinyxml ')

if int(release) == 0:
	env['CCFLAGS'] = Split('-g -O0 -Wall -DTIXML_USE_STL -fopenmp -DPANDORADEBUG')	
	if int(extremeDebug)==1:
		env['CCFLAGS'] += ['-DPANDORAEDEBUG']
	libs += ['pandorad']
else:
	env['CCFLAGS'] = Split('-O3 -DTIXML_USE_STL -fopenmp')
	libs += ['pandora']

if int(useMpi)==1:
	env['CCFLAGS'] += ['-DPANDORAMPI']

includeDirs = Split('./ ../../../../')

includeDirs += ['/usr/lib/grass64/include/','/usr/include/gdal/']
libDirs = ['../../../../', '/usr/lib/grass64/lib/']

if int(useMpi)==1:
	includeDirs += ['/usr/local/hdf5/include']
	libDirs += ['usr/local/hdf5/lib/']
libs += ['mpl']

env.Program(nameProgram, srcFiles, CPPPATH=includeDirs, LIBS=libs, LIBPATH=libDirs, LINKFLAGS=linkFlags)


